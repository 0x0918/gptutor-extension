{
  "name": "gptutor",
  "displayName": "GPTutor (ü§ñ‚Äöü§ñ)",
  "repository": {
    "type": "git",
    "url": "https://github.com/GPTutor/gptutor-extension"
  },
  "description": "A VS Code extension for smart contract development.",
  "publisher": "gptutor",
  "version": "0.0.113",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "out/resources/extensionIcon.png",
  "activationEvents": [
    "onView:gptutor.chatView"
  ],
  "main": "out/extension.js",
  "contributes": {
    "configuration": {
      "title": "GPTutor",
      "properties": {
        "GPTutor.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key"
        },
        "GPTutor.openaiTemperature": {
          "type": "number",
          "default": 0.8,
          "description": "Temperature is a parameter that controls the ‚Äúcreativity‚Äù or randomness of the text generated by GPT-3. A higher temperature (e.g., 0.7) results in more diverse and creative output, while a lower temperature (e.g., 0.2) makes the output more deterministic and focused.\nIn practice, temperature affects the probability distribution over the possible tokens at each step of the generation process. A temperature of 0 would make the model completely deterministic, always choosing the most likely token."
        },
        "GPTutor.openaiModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "enum": [
            "gpt-3.5-turbo",
            "gpt-4",
            "gpt-3.5-turbo-0301",
            "gpt-4-0314"
          ],
          "enumDescriptions": [
            "Default model, use by ChatGPT",
            "GPT-4 can handle longer code and provide a superior response. Yet it is more expensive. You may need to apply for the access of GPT-4."
          ],
          "description": "OpenAI Model Selection"
        },
        "GPTutor.outputLanguage": {
          "type": "string",
          "default": "English",
          "enum": [
            "Afrikaans",
            "Albanian",
            "Amharic",
            "Arabic",
            "Armenian",
            "Assamese",
            "Aymara",
            "Azerbaijani",
            "Bambara",
            "Basque",
            "Belarusian",
            "Bengali",
            "Bhojpuri",
            "Bosnian",
            "Bulgarian",
            "Catalan",
            "Cebuano",
            "Chinese (Simplified)",
            "Chinese (Traditional)",
            "Corsican",
            "Croatian",
            "Czech",
            "Danish",
            "Dhivehi",
            "Dogri",
            "Dutch",
            "English",
            "Esperanto",
            "Estonian",
            "Ewe",
            "Filipino (Tagalog)",
            "Finnish",
            "French",
            "Frisian",
            "Galician",
            "Georgian",
            "German",
            "Greek",
            "Guarani",
            "Gujarati",
            "Haitian Creole",
            "Hausa",
            "Hawaiian",
            "Hebrew",
            "Hindi",
            "Hmong",
            "Hungarian",
            "Icelandic",
            "Igbo",
            "Ilocano",
            "Indonesian",
            "Irish",
            "Italian",
            "Japanese",
            "Javanese",
            "Kannada",
            "Kazakh",
            "Khmer",
            "Kinyarwanda",
            "Konkani",
            "Korean",
            "Krio",
            "Kurdish",
            "Kurdish (Sorani)",
            "Kyrgyz",
            "Lao",
            "Latin",
            "Latvian",
            "Lingala",
            "Lithuanian",
            "Luganda",
            "Luxembourgish",
            "Macedonian",
            "Maithili",
            "Malagasy",
            "Malay",
            "Malayalam",
            "Maltese",
            "Maori",
            "Marathi",
            "Meiteilon (Manipuri)",
            "Mizo",
            "Mongolian",
            "Myanmar (Burmese)",
            "Nepali",
            "Norwegian",
            "Nyanja (Chichewa)",
            "Odia (Oriya)",
            "Oromo",
            "Pashto",
            "Persian",
            "Polish",
            "Portuguese (Portugal, Brazil)",
            "Punjabi",
            "Quechua",
            "Romanian",
            "Russian",
            "Samoan",
            "Sanskrit",
            "Scots Gaelic",
            "Sepedi",
            "Serbian",
            "Sesotho",
            "Shona",
            "Sindhi",
            "Sinhala (Sinhalese)",
            "Slovak",
            "Slovenian",
            "Somali",
            "Spanish",
            "Sundanese",
            "Swahili",
            "Swedish",
            "Tagalog (Filipino)",
            "Tajik",
            "Tamil",
            "Tatar",
            "Telugu",
            "Thai",
            "Tigrinya",
            "Tsonga",
            "Turkish",
            "Turkmen",
            "Twi (Akan)",
            "Ukrainian",
            "Urdu",
            "Uyghur",
            "Uzbek",
            "Vietnamese",
            "Welsh",
            "Xhosa",
            "Yiddish",
            "Yoruba",
            "Zulu"
          ],
          "description": "Output language, this value will replace the ${outputLanguage} value in prompt."
        },
        "GPTutor.instructionForSpecificLanguage": {
          "type": "object",
          "description": "instruction after the prompt when user choose specific language. This can help the generated content to be more localized.",
          "default": {
            "Chinese (Traditional)": "Ë´ã‰ΩøÁî®ÁπÅÈ´î‰∏≠ÊñáËàáËá∫ÁÅ£Âú∞ÂçÄÁî®Ë™ûÔºå‰∏çË¶ÅÁî®Á∞°È´îÂ≠óËàá‰∏≠ÂúãÂ§ßÈô∏Âú∞ÂçÄÁöÑÁî®Ë©û„ÄÇÊØîÊñπË´ãÁî®„ÄåÁ®ãÂºèÁ¢º„ÄçËÄå‰∏çÊòØ„Äå‰ª£Á†Å„Äç„ÄÇ"
          }
        },
        "GPTutor.prompts": {
          "type": "object",
          "description": "Prompts for GPTutor when you hover over a code block.",
          "default": {
            "global": {
              "explain": {
                "display_name": "üßë‚Äçüè´ Explain",
                "type": "chatgpt-prompt",
                "prompt": [
                  {
                    "role": "system",
                    "content": "You are a Senior ${languageId} Developer \n I will provide some ${languageId} code, and it will be your job to explain the  ${languageId} code I selected."
                  },
                  {
                    "role": "user",
                    "content": "Other context about the selected code is in the following triple quotes \"\"\"${codeContext}\"\"\". The ${languageId} code I selected is in the following triple quotes \"\"\"${selectedCode}\"\"\". You don't need to repeat the selected code again. Please focus on explain target ${languageId} code. Output in ${outputLanguage}."
                  }
                ]
              },
              "comment": {
                "display_name": "üìù Comment",
                "type": "chatgpt-prompt",
                "prompt": [
                  {
                    "role": "system",
                    "content": "I want you to act as a professional ${languageId} Commenter. \n I will provide some code about ${languageId}, \n and it will be your job to add or rewrite comment on the provided ${languageId} code in ${outputLanguage}. You should only edit command, but keep the code the same."
                  },
                  {
                    "role": "user",
                    "content": "Here are some context of the code, don't output them: ${codeContext}\n Here are the ${languageId} code I want you to add comment: ${selectedCode}. Only return the code after modified. return the code with the start of ``` and end it with ```. Add or rewrite the comment in the given code in ${outputLanguage}."
                  }
                ]
              },
              "audit": {
                "display_name": "üïµÔ∏è Audit",
                "type": "chatgpt-prompt",
                "prompt": [
                  {
                    "role": "system",
                    "content": "You are a Senior ${languageId} Developer \n I will provide some ${languageId} code, and it will be your job to explain the  ${languageId} code I selected."
                  },
                  {
                    "role": "user",
                    "content": "Given the ${languageId} code, I want you to do the following:\n\n1. if there is a problem with this ${languageId} code or if there is a security concern, \n modify this ${languageId} code. Only return the code after modified. Here is the full code context if needed. ${codeContext}. return the code with the start of ``` and end it with ```. Add or rewrite the comment in the code in ${outputLanguage}.\n\n2. Then, check again if there is a security concern with the original code, modified code, and the context. List each of the concern.\n\n3. Refine and audit this code again \n Please think carefully. And audit this code to be better. \n If it is already quite secure and efficient, then you don't need to output anything in this step. \nOutput in ${outputLanguage}."
                  }
                ]
              }
            },
            "specificLanguage": {
              "move": {
                "explain": {
                  "display_name": "üßë‚Äçüè´ Explain",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "system",
                      "content": "Move is an open source language for writing safe smart contracts. It's format is similar to Rust. You are a Senior ${languageId} Developer \n I will provide some ${languageId} code, and it will be your job to explain the  ${languageId} code I selected."
                    },
                    {
                      "role": "user",
                      "content": "Other context about the selected code is in the following triple quotes \"\"\"${codeContext}\"\"\". The ${languageId} code I selected is in the following triple quotes \"\"\"${selectedCode}\"\"\". Please focus on explain target ${languageId} code. Output in ${outputLanguage}."
                    }
                  ]
                },
                "comment": {
                  "display_name": "üìù Comment",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "system",
                      "content": "Move is an open source language for writing safe smart contracts. It's format is similar to Rust. I want you to act as a professional ${languageId} Commenter. \n I will provide some code about ${languageId}, \n and it will be your job to add or rewrite comment on the provided ${languageId} code in ${outputLanguage}. You should only edit command, but keep the code the same."
                    },
                    {
                      "role": "user",
                      "content": "Here are some context of the code, don't output them: ${codeContext}\n Here are the ${languageId} code I want you to add comment: ${selectedCode}. Only return the code after modified. return the code with the start of ``` and end it with ```. Add or rewrite the comment in the given code in ${outputLanguage}, but keep the variable name the same."
                    }
                  ]
                },
                "audit": {
                  "display_name": "üïµÔ∏è Audit",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "system",
                      "content": "Move is an open source language for writing safe smart contracts. It's format is similar to Rust. You are a Senior ${languageId} Developer \n I will provide some ${languageId} code, and it will be your job to explain the  ${languageId} code I selected."
                    },
                    {
                      "role": "user",
                      "content": "Given the ${languageId} code, I want you to do the following:\n\n1. if there is a problem with this ${languageId} code or if there is a security concern, \n modify this ${languageId} code. Only return the code after modified. Here is the full code context if needed. ${codeContext}. return the code with the start of ``` and end it with ```. Add or rewrite the comment in the code in ${outputLanguage}.\n\n2. Then, check again if there is a security concern with the original code, modified code, and the context. List each of the concern.\n\n3. Refine and audit this code again \n Please think carefully. And audit this code to be better. \n If it is already quite secure and efficient, then you don't need to output anything in this step. \nOutput in ${outputLanguage}."
                    }
                  ]
                }
              }
            }
          }
        },
        "GPTutor.chatPrompts": {
          "type": "object",
          "default": {
            "global": {
              "default": {
                "display_name": "ü§ñ Code Generator",
                "type": "chatgpt-prompt",
                "prompt": [
                  {
                    "role": "user",
                    "content": "Complete the ${languageId} code below with the instruction text delimited by triple quotes. \n\n\n\n\"\"\"${user_input}\"\"\"\n\nOutput your explain and comment in ${outputLanguage} if possible."
                  }
                ]
              },
              "refactor": {
                "display_name": "ü§ñ Refactor",
                "type": "chatgpt-prompt",
                "prompt": [
                  {
                    "role": "user",
                    "content": "Here are some context about the code to help you refactor, delimited by the following triple quotes: \"\"\"${codeContext}\"\"\". Refactor the selected ${languageId} code delimited by the following triple quotes: \"\"\"${selectedCode}\"\"\" with the instruction delimited by the following triple quotes: \"\"\"${user_input}\"\"\". You shall do the following three steps: 1. point out the problem of the selected ${languageId} code according to the instruction. 2. refactor the code following the syntex of the code above, to fix those problems 3. explain the refactored code. Output your explain and comment in ${outputLanguage} if possible. "
                  }
                ]
              }
            },
            "specificLanguage": {
              "python": {
                "default": {
                  "display_name": "ü§ñ CoderPython",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "user",
                      "content": "You are a master python coder! Complete the ${languageId} code below with the instruction text delimited by triple quotes. \n\n\n\n\"\"\"${user_input}\"\"\"Output your explain and comment in ${outputLanguage} but the code and variable name should be in English."
                    }
                  ]
                },
                "fastAPI Master": {
                  "display_name": "ü§ñ FastAPI Master",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "user",
                      "content": "You are a master python coder in fastapi! Complete the ${languageId} fastAPI code below with the instruction text delimited by triple quotes. \n\n\n\n\"\"\"${user_input}\"\"\"Output your explain and comment in ${outputLanguage} but the code and variable name should be in English."
                    }
                  ]
                }
              },
              "javascript": {
                "default": {
                  "display_name": "ü§ñ React Helper",
                  "type": "chatgpt-prompt",
                  "prompt": [
                    {
                      "role": "user",
                      "content": "You are a react generator! \n\nHere are the code before the cursor delimited by triple quotes: \"\"\"${codeBefore}\"\"\"\n\nAnd here are the code after the cursor delimited by triple quotes: \"\"\"${codeAfter}\"\"\"\n\nHere is the code selected by the user delimited by triple quotes: \"\"\"${selectedCode}\"\"\"\n\nComplete the react code on the cursor or refactor the selected code with the instruction text delimited by triple quotes. \n\n\n\n\"\"\"${user_input}\"\"\"Output your explain and comment in ${outputLanguage} but the code and variable name should be in English."
                    }
                  ]
                }
              }
            }
          },
          "description": "Prompts for GPTutor when you chat with it in the input box"
        }
      }
    },
    "commands": [
      {
        "command": "Initialize GPTutor",
        "title": "GPTutor: init"
      },
      {
        "command": "Set OpenAI API Key",
        "title": "GPTutor: setKey"
      },
      {
        "command": "Delete OpenAI API Key",
        "title": "GPTutor: deleteKey"
      },
      {
        "command": "Set Model",
        "title": "GPTutor: setModel"
      },
      {
        "command": "GPTutor Active",
        "title": "GPTutor: active"
      },
      {
        "command": "GPTutor Edit Prompts",
        "title": "GPTutor: edit prompts"
      },
      {
        "command": "GPTutor Reset Prompts Config",
        "title": "GPTutor: reset prompts"
      }
    ],
    "menus": {
      "editor/context": [],
      "commandPalette": []
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gptutor",
          "title": "GPTutor",
          "icon": "out/resources/icon.png"
        }
      ]
    },
    "views": {
      "gptutor": [
        {
          "type": "webview",
          "id": "GPTutor.chatView",
          "name": "GPTutor"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && copyfiles -u 1 \"src/resources/**/*\" out && copyfiles -u 1 \"src/media/**/*\" out",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "publish": "npm run compile && vsce package && vsce publish",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5",
    "vscode-extension-tester": "^5.7.1"
  },
  "dependencies": {
    "axios": "^1.4.0",
    "copyfiles": "^2.4.1",
    "openai": "^3.2.1"
  }
}
